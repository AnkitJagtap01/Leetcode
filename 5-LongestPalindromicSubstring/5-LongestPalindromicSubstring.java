    }

        return s.substring(start, end + 1);
        }
            }
                end = i + len / 2;
                start = i - (len - 1) / 2;
            if (len > end - start) {
            int len = Math.max(len1, len2);
            int len2 = expandAroundCenter(s, i, i + 1); // Even length palindromes
            int len1 = expandAroundCenter(s, i, i); // Odd length palindromes
        for (int i = 0; i < s.length(); i++) {
        int start = 0, end = 0;
        
        if (s == null || s.length() < 1) return "";
    public String longestPalindrome(String s) {
public class Solution {
"
