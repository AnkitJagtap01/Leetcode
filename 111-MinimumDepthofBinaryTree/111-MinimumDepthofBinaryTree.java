        while (!queue.isEmpty()) {
        queue.offer(root);
        int depth = 1;  // Start with depth 1 since we are counting from the root node
        
    public int minDepth(TreeNode root) {
        if (root == null) return 0;
        
        Queue<TreeNode> queue = new LinkedList<>();
 *     }
 * }
 */

public class Solution {
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
/**
 * Definition for a binary tree node.
 * public class TreeNode {
[
